export declare enum Hook {
    CanClientMove = "canClientMove",
    CanConsumeItem = "canConsumeItem",
    CanCreatureAttack = "canCreatureAttack",
    CanCreatureMove = "canCreatureMove",
    CanCreatureSpawn = "canCreatureSpawn",
    CanDoodadSpawn = "canDoodadSpawn",
    CanDropItem = "canDropItem",
    CanPickupDoodad = "canPickupDoodad",
    CanPlayerAttack = "canPlayerAttack",
    CanSeeCreature = "canSeeCreature",
    GetAmbientColor = "getAmbientColor",
    GetAmbientColorCave = "getAmbientColorCave",
    GetAmbientColorDay = "getAmbientColorDay",
    GetAmbientColorNight = "getAmbientColorNight",
    GetAmbientLightLevel = "getAmbientLightLevel",
    GetCreatureSpriteBatchLayer = "getCreatureSpriteBatchLayer",
    GetPlayerFieldOfViewRadius = "getPlayerFieldOfViewRadius",
    GetPlayerMaxHealth = "getPlayerMaxHealth",
    GetPlayerMovementIntent = "getPlayerMovementIntent",
    GetPlayerSpriteBatchLayer = "getPlayerSpriteBatchLayer",
    GetPlayerStrength = "getPlayerStrength",
    GetPlayerWeightMovementPenalty = "getPlayerWeightMovementPenalty",
    GetPlayerWeightStatus = "getPlayerWeightStatus",
    GetTileLightLevel = "getTileLightLevel",
    IsPlayerSwimming = "isPlayerSwimming",
    IsTileInspectable = "isTileInspectable",
    OnBindLoop = "onBindLoop",
    OnBuild = "onBuild",
    OnButtonBarClick = "onButtonBarClick",
    OnContainerItemAdd = "onContainerItemAdd",
    OnContainerItemRemove = "onContainerItemRemove",
    OnContainerItemUpdate = "onContainerItemUpdate",
    OnCraft = "onCraft",
    OnCreateWorld = "onCreateWorld",
    OnCreatureDamage = "onCreatureDamage",
    OnCreatureDeath = "onCreatureDeath",
    OnCreatureSpawn = "onCreatureSpawn",
    OnDisplayMessage = "onDisplayMessage",
    OnDoodadSpawn = "onDoodadSpawn",
    OnGameEnd = "onGameEnd",
    OnGameStart = "onGameStart",
    OnGameTickEnd = "onGameTickEnd",
    OnGameTickStart = "onGameTickStart",
    OnInspectTile = "onInspectTile",
    OnInventoryItemAdd = "onInventoryItemAdd",
    OnInventoryItemRemove = "onInventoryItemRemove",
    OnInventoryItemUpdate = "onInventoryItemUpdate",
    OnItemEquip = "onItemEquip",
    OnMove = "onMove",
    OnMoveComplete = "onMoveComplete",
    OnMoveDirectionUpdate = "onMoveDirectionUpdate",
    OnNoInputReceived = "onNoInputReceived",
    OnPickupDoodad = "onPickupDoodad",
    OnPlayerDamage = "onPlayerDamage",
    OnPlayerDeath = "onPlayerDeath",
    OnPlayerJoin = "onPlayerJoin",
    OnPlayerLeave = "onPlayerLeave",
    OnPlayerTickEnd = "onPlayerTickEnd",
    OnPlayerTickStart = "onPlayerTickStart",
    OnQueueSoundEffect = "onQueueSoundEffect",
    OnShowInGameScreen = "onShowInGameScreen",
    OnSpawnCreatureFromGroup = "onSpawnCreatureFromGroup",
    OnTileUpdate = "onTileUpdate",
    OnTurnEnd = "onTurnEnd",
    OnTurnStart = "onTurnStart",
    OnUpdateWeight = "onUpdateWeight",
    PostExecuteAction = "postExecuteAction",
    PostGenerateWorld = "postGenerateWorld",
    PostRender = "postRender",
    PostRenderPostProcess = "postRenderPostProcess",
    PostRenderWorld = "postRenderWorld",
    PreExecuteAction = "preExecuteAction",
    PreExecuteCommand = "preExecuteCommand",
    PreRender = "preRender",
    PreRenderPostProcess = "preRenderPostProcess",
    PreRenderWorld = "preRenderWorld",
    ProcessInput = "processInput",
    ShouldRender = "shouldRender",
}
export declare const globalHooks: Hook[];
export declare enum HookPriority {
    Lowest = -2000,
    Low = -1000,
    Normal = 0,
    High = 1000,
    Highest = 2000,
}
export interface IModConfig {
    readonly name: string;
    readonly description: string;
    readonly version: string;
    readonly author: string;
    readonly file: string;
    readonly unloadable?: boolean;
    readonly dependencies?: string[];
    readonly compatibleMinorVersions: number[];
    readonly multiplayerCompatible?: boolean;
    readonly multiplayerClientside?: boolean;
    readonly languages?: string[];
    readonly stylesheets?: string[];
    readonly imageOverrides?: boolean;
    readonly customizations?: boolean;
    readonly publishedFileId?: string;
}
